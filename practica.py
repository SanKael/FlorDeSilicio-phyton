from colorama import Fore, Style, init
import json

init(autoreset=True)

criaturas = []

def a√±adir_criatura(lista):
    try:
        nombre = input("Nombre de la criatura: ").strip().lower()
        if not nombre:
            raise ValueError("El nombre no puede estar vac√≠o.")
        if any(c["nombre"] == nombre for c in lista):
            print(Fore.RED + "‚ö†Ô∏è Ya existe una criatura con ese nombre.")
            return

        tipo = input("Tipo de criatura: ").strip().lower()
        if not tipo:
            raise ValueError("El tipo no puede estar vac√≠o.")

        nivel = input("Nivel (entero positivo): ").strip()
        if not nivel.isdigit() or int(nivel) <= 0:
            raise ValueError("El nivel debe ser un n√∫mero entero positivo.")

        criatura = {
            "nombre": nombre,
            "tipo": tipo,
            "nivel": int(nivel)
        }
        lista.append(criatura)
        print(Fore.GREEN + f"‚úÖ Criatura '{nombre}' a√±adida con √©xito.")
    except ValueError as ve:
        print(Fore.RED + f"Error: {ve}")


def buscar_criatura(lista):
    nombre = input("üîé Nombre de la criatura a buscar: ").strip().lower()
    for criatura in lista:
        if criatura["nombre"] == nombre:
            print(Fore.BLUE + "\nüìå Criatura encontrada:")
            print(f"- Nombre: {criatura['nombre'].capitalize()}")
            print(f"- Tipo: {criatura['tipo'].capitalize()}")
            print(f"- Nivel: {criatura['nivel']}")
            return
    print(Fore.RED + "‚ùå No se encontr√≥ ninguna criatura con ese nombre.")


def eliminar_criatura(lista):
    nombre = input("üóëÔ∏è Nombre de la criatura a eliminar: ").strip().lower()
    for criatura in lista:
        if criatura["nombre"] == nombre:
            print(f"‚ö†Ô∏è ¬øEst√°s seguro de que quieres eliminar '{nombre}'?")
            confirmacion = input("Escribe 's√≠' para confirmar: ").strip().lower()
            if confirmacion == "s√≠":
                lista.remove(criatura)
                print(Fore.GREEN + f"‚úÖ '{nombre}' ha sido eliminada.")
            else:
                print(Fore.YELLOW + "‚ùé Eliminaci√≥n cancelada.")
            return
    print(Fore.RED + "‚ùå No se encontr√≥ ninguna criatura con ese nombre.")


def mostrar_todas(lista):
    if not lista:
        print(Fore.YELLOW + "üå´Ô∏è No hay criaturas registradas.")
    else:
        print(Fore.MAGENTA + "\nüìú Tu colecci√≥n de criaturas:")
        for i, criatura in enumerate(lista, 1):
            nombre = criatura['nombre']
            tipo = criatura['tipo']
            nivel = criatura['nivel']

            if nombre == "sof√≠a la luminosa":
                color = Fore.LIGHTWHITE_EX + Style.BRIGHT
            elif nombre == "pepino astral":
                color = Fore.GREEN + Style.BRIGHT
            else:
                color = Fore.CYAN

            print(color + f"{i}. {nombre.capitalize():20} | Tipo: {tipo.capitalize():15} | Nivel: {nivel}")


def cargar_desde_json(lista, archivo="criaturas.json"):
    try:
        with open(archivo, "r", encoding="utf-8") as f:
            datos = json.load(f)
            for criatura in datos:
                if not any(c["nombre"] == criatura["nombre"] for c in lista):
                    lista.append(criatura)
        print(Fore.GREEN + "‚úÖ Datos cargados desde JSON correctamente.")
    except FileNotFoundError:
        print(Fore.YELLOW + "‚ö†Ô∏è Archivo JSON no encontrado.")
    except json.JSONDecodeError:
        print(Fore.RED + "‚ùå Error de formato en el JSON.")


def guardar_en_json(lista, archivo="criaturas.json"):
    try:
        with open(archivo, "w", encoding="utf-8") as f:
            json.dump(lista, f, indent=4, ensure_ascii=False)
        print(Fore.GREEN + "üíæ Datos guardados en JSON correctamente.")
    except Exception as e:
        print(Fore.RED + f"‚ùå Error al guardar en JSON: {e}")


def mostrar_menu():
    print(Fore.YELLOW + Style.BRIGHT + "\nüåü Men√∫ de opciones:")
    print(Fore.CYAN + "1. A√±adir criatura")
    print("2. Buscar criatura")
    print("3. Eliminar criatura")
    print("4. Mostrar todas")
    print("5. Guardar en archivo JSON")
    print("6. Salir")


# Carga autom√°tica
cargar_desde_json(criaturas)

while True:
    mostrar_menu()
    opcion = input("Elige una opci√≥n (1-6): ").strip()

    if opcion == "1":
        print("üëâ A√±adir criatura")
        a√±adir_criatura(criaturas)
    elif opcion == "2":
        print("üîç Buscar criatura")
        buscar_criatura(criaturas)
    elif opcion == "3":
        print("üóëÔ∏è Eliminar criatura")
        eliminar_criatura(criaturas)
    elif opcion == "4":
        print("üìú Mostrar todas")
        mostrar_todas(criaturas)
    elif opcion == "5":
        print("üíæ Guardando en JSON")
        guardar_en_json(criaturas)
    elif opcion == "6":
        guardar_en_json(criaturas)
        print(Fore.CYAN + "üëã Datos guardados. Saliendo del programa. ¬°Hasta la pr√≥xima!")
        break
    else:
        print(Fore.RED + "‚ö†Ô∏è Opci√≥n no v√°lida.")
